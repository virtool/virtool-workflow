# Run unit tests, integration tests, and other CI checks
name: ci

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4

  pytest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run Tests Using Docker Compose
        run: |
          cd tests
          docker-compose up --build --exit-code-from pytest

      - name: Upload Coverage Report As Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Coverage
          path: ./tests/coverage/coverage.xml

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build `virtool/workflow`
        run: docker build -t virtool/workflow .

      - name: Run Tests Using Docker Compose
        run: |
          pip install .
          cd integration_tests
          ./run.sh


  pypi-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    container: python:3.8
    steps:
      - uses: actions/checkout@v2

      - name: Install Poetry
        run: pip3 install poetry

      - name: Poetry Build
        run: |
            poetry check
            poetry build

  release:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    needs: 
      - pytest
      - integration-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install semantic-release
        run: npm i semantic-release@v18.0.0 conventional-changelog-conventionalcommits@4.6.1

      - name: Release
        env:
          GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
