name: CI

on:
  pull_request:
    branches:
      - "main"
      - "alpha"
  push:
    branches:
      - "main"
      - "alpha"

jobs:
  commitlint:
    name: "Commit Lint"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Commitlint
        uses: wagoid/commitlint-github-action@v5
  test:
    name: "Test"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Compose Up
        run: docker compose up -d
      - name: Test
        run: docker compose exec test poetry run pytest
      - name: Compose Down
        run: docker compose down
  build:
    name: "Build"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Poetry Build
        run: |
            poetry check
            poetry build
  release:
    name: "Release"
    runs-on: ubuntu-24.04
    if: github.event_name == 'push'
    needs:
      - commitlint
      - build
      - test
    outputs:
      git-tag: ${{ steps.semantic.outputs.git-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install semantic-release
        run: npm i semantic-release@^23.0.8 @semantic-release/exec@v6.0.3 conventional-changelog-conventionalcommits@^7.0.0
      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
  pypi:
    name: "PyPI Publish"
    runs-on: ubuntu-24.04
    if: github.repository_owner == 'Virtool' && github.event_name == 'push' && needs.release.outputs.git-tag != ''
    needs:
      - release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.git-tag }}
      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Update Version
        run: poetry version ${{ needs.release.outputs.git-tag }} && poetry lock
      - name: Build
        run: poetry build
      - name: Publish
        run: poetry publish -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_TOKEN }}
